#+title: 逻辑值 算数 正则表达式

* 逻辑值
  
  用来将非逻辑值转换为逻辑值
  Boolean是讲布尔值打包的布尔对象，通常可以隐式进行
  #+BEGIN_SRC javascript
         alert(true.toString())
         alert(Boolean('hello').toString())
  #+END_SRC
  当布尔对象的初始值为0 -0 null "" false undefined或者NaN时，其值为false,否则为true
  注意Boolean("false")为true
  #+BEGIN_SRC javascript
         alert(new Boolean(false))
         alert(new Boolean(0))
         alert(new Boolean(null))
         alert(new Boolean(""))
         alert(new Boolean(undefined))
         alert(new Boolean(NaN))
         alert(new Boolean(Infinity))
  #+END_SRC
* Math
  - 四舍五入 round
  - 随机数 random
  - 最小值 min
  - 最大值 max
    #+BEGIN_SRC javascript
         alert(Math.PI)
         alert(Math.E)
         alert(Math.SQRT2)
         alert(Math.SQRT1_2)
         alert(Math.LN2)
         alert(Math.LN10)
         alert(Math.LOG2E)
         alert(Math.LOG10E)
         alert(Math.floor(Math.random()))
    #+END_SRC
* RegExp
  new RegExp("e"), 若使用RegExp("e", "g")则再第一个找到后保存位置，再次调用继续
  - test() : 检测第一个参数，存在则返回true，否则false
  - exec() : 检测第一个参数，存在则返回匹配字符串，否则返回false
  - compile ： 使用新的正则表达式
    #+BEGIN_SRC javascript
         var regexp = new RegExp("e", "g");
         var i = 0;
         while(i = regexp.exec("eeeeee"))
         {
             alert(i)
         }
    #+END_SRC